import { app, BrowserWindow, dialog, shell } from "electron";
import { CdnService } from "./main/cdnService";
import { IPC } from "./main/ipc";
// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require("electron-squirrel-startup")) {
  // eslint-disable-line global-require
  app.quit();
}

// Automatic updates
// require("update-electron-app")();

export let mainWindow: BrowserWindow;

const createWindow = async () => {
  // await CdnService.loadManifest();

  const response = await dialog.showMessageBox({
    type: "error",
    buttons: ["Discord", "Site web"],
    title: "Information importante !",
    message:
      "Cette version du launcher est dépréciée.\nVous utilisiez une version Alpha du launcher, nous vous invitons à la désinstaller !\nUne version stable du launcher est disponible sur arena-returns.com\n\nPour plus d'informations, rejoignez nous sur Discord.",
  });

  if (response) {
    if (response.response === 0) {
      shell.openExternal("https://discord.gg/arenareturns");
    } else if (response.response === 1) {
      shell.openExternal("https://arena-returns.com");
    }
  }

  app.quit();

  // Create the browser window.
  // mainWindow = new BrowserWindow({
  //   minWidth: 1024,
  //   minHeight: 576,
  //   width: 1024,
  //   height: 576,
  //   maxWidth: 1366,
  //   maxHeight: 768,
  //   maximizable: false,
  //   fullscreenable: false,
  //   icon: "assets/icon/icon.png",
  //   webPreferences: {
  //     nodeIntegration: false,
  //     contextIsolation: true,
  //     preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
  //     devTools: process.env.NODE_ENV === "development",
  //   },
  //   frame: false,
  //   titleBarStyle: "hidden",
  //   backgroundColor: "#3B180E",
  //   show: false,
  // });

  // if (process.platform === "linux") {
  //   console.log("Linux system detected. Disabling resizing as it causes issues with Gnome.");
  //   mainWindow.setResizable(false);
  // }

  // mainWindow.setAspectRatio(16 / 9);

  // and load the index.html of the app.
  // mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  // Prevent the white screen while loading the front-end
  // mainWindow.once("ready-to-show", () => {
  //  mainWindow.show();
  // });

  // Open the DevTools.
  //mainWindow.webContents.openDevTools();

  // IPC.registerEvents(mainWindow);
  //IPC.registerHandlers(mainWindow);
};

// Prevent multiple launchers from being opened at the same time
if (!app.requestSingleInstanceLock()) {
  if (mainWindow) {
    mainWindow.show();
    mainWindow.focus();
  }

  app.quit();
}

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on("ready", createWindow);
